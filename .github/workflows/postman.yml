# This is a basic workflow to help you get started with Actions

name: Postman Newman Run

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  POSTMAN_TEST:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2  
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
         python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi 
        
    - name: Install Node
      uses: actions/setup-node@v1
      with: 
        node-version: '12.x'
    
    # Install the newman command line utility and also install the html extra reporter
    - name: Install newman
      run: |
       npm install -g newman
       npm install -g newman-reporter-htmlextra
       
    - name: Make Directory for results
      run: mkdir -p testResults
        
    - name: Newman Run
      run: |
        export FLASK_APP=src/app.py
        nohup flask run &
        echo $! > flask.pid
        newman run https://www.getpostman.com/collections/4800192a6e1355a0b482 -r htmlextra --reporter-htmlextra-export testResults/htmlreport_doc0.html
        newman run https://www.getpostman.com/collections/2eabfd56b4245b70c345 -r htmlextra --reporter-htmlextra-export testResults/htmlreport_doc1.html
        newman run https://www.getpostman.com/collections/2efcf7c8040630da20fb -r htmlextra --reporter-htmlextra-export testResults/htmlreport_invalid.html
        sleep 30
        kill -9 `cat flask.pid`
        
    - name: Output the run Details
      uses: actions/upload-artifact@v2
      with: 
       name: RunReports
       path: testResults
        
  

